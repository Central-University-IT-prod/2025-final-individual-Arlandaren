services:
  nginx:
    image: nginx:latest
    restart: always
    volumes:
      - ./nginx.shield.conf:/etc/nginx/nginx.conf
    ports:
      - "8081:81"
      - "8082:82"
    depends_on:
      - app_service
    networks:
      - app
    labels:
      loki: 'true'
  redis:
    image: redis:latest
    restart: always
    command: [ "redis-server", "--requirepass", "${REDIS_PASSWORD}" ]
    ports:
      - "6378:6379"
    networks:
      - app
    labels:
      loki: 'true'
    environment:
      - REDIS_PASSWORD=${REDIS_PASSWORD}


  postgres:
    image: postgres:latest
    restart: always
    environment:
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_DB=${POSTGRES_DB}
      - PGDATA=/var/lib/postgresql/data/pgdata
    volumes:
      - pg_data:/var/lib/postgresql/data/pgdata
    ports:
      - "5434:5432"
    networks:
      - app
    labels:
      loki: 'true'

  app_service:
    build: .
    environment:
      - PG_STRING=${PG_STRING}
      - HTTP_ADDRESS=${HTTP_ADDRESS}
      - REDIS_ADDRESS=${REDIS_ADDRESS}
      - REDIS_PASSWORD=${REDIS_PASSWORD}
      - TOGETHER_API=${TOGETHER_API}
      - TOGETHER_URL=${TOGETHER_URL}
      - MINIO_ENDPOINT=${MINIO_ENDPOINT}
      - MINIO_ROOT_USER=${MINIO_ROOT_USER}
      - MINIO_SSL=${MINIO_SSL}
      - MINIO_ROOT_PASSWORD=${MINIO_ROOT_PASSWORD}
    volumes:
      - .:/app
    depends_on:
      - postgres
    restart: always
    ports:
      - "8080:8080"
    networks:
      - app
    labels:
      loki: 'true'

  prometheus:
    image: prom/prometheus:latest
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"
    depends_on:
      - nginx-exporter
    networks:
      - app

  grafana:
    image: grafana/grafana:latest
    ports:
      - "3000:3000"
    volumes:
      - ./grafana/provisioning/dashboards/:/etc/grafana/provisioning/dashboards/
      - ./grafana/provisioning/datasources/:/etc/grafana/provisioning/datasources/
      - ./grafana/dashboards/:/var/lib/grafana/dashboards/
    depends_on:
      - prometheus
      - loki
    networks:
      - app
    environment:
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_HOST=${POSTGRES_HOST}

  nginx-exporter:
    image: nginx/nginx-prometheus-exporter:latest
    ports:
      - "9113:9113"
    command: >
      -nginx.scrape-uri http://nginx:82/nginx_status
      -web.listen-address :9113
      -web.telemetry-path /metrics
    depends_on:
      - nginx
    networks:
      - app

  loki:
    image: grafana/loki:2.8.2
    ports:
      - "3100:3100"
    volumes:
      - ./loki-config.yaml:/etc/loki/local-config.yaml
      - ./loki-data:/loki
    command: -config.file=/etc/loki/local-config.yaml
    networks:
      - app
    user: "root"


  promtail:
    image: grafana/promtail:2.8.2
    volumes:
      - /var/log:/var/log
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
      - /var/run/docker.sock:/var/run/docker.sock
      - ./promtail-config.yaml:/etc/promtail/promtail.yaml
    command: -config.file=/etc/promtail/promtail.yaml
    depends_on:
      - loki
    networks:
      - app

  bot:
    restart: always
    depends_on:
      - app_service
    build: ./tg-bot
    networks:
      - app

  minio:
    image: minio/minio:latest
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      - MINIO_ROOT_USER=${MINIO_ROOT_USER}
      - MINIO_ROOT_PASSWORD=${MINIO_ROOT_PASSWORD}
    volumes:
      - ./minio-data:/data
    command: server /data --console-address ":9001"
    networks:
      - app


volumes:
  pg_data:

networks:
  app:
    driver: bridge

